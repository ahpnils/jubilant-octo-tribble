- name: Install software dependencies
  package: name="git,rsync" state=present

- name: Clone HTML content repo
  git:
    repo: "{{ remote_content_repo }}"
    dest: /var/www/repo
    clone: yes
    update: yes

- name: Handle Document Root part 1
  stat:
    path: /var/www/html
  register: document_root_type

- name: Handle Document Root part 2
  ansible.builtin.file:
    path: /var/www/html
    state: absent
  when: document_root_type.stat.lnk is defined 

- name: Handle Document Root part 3
  ansible.builtin.file:
    path: /var/www/html
    state: directory
    mode: 0755
    owner: root
    group: root
    follow: no
    force: yes

- name: Synchronize HTML content to Document Root
  ansible.posix.synchronize:
    src: /var/www/repo/content/
    dest: /var/www/html/
    delete: yes
    recursive: yes
  delegate_to: "{{ inventory_hostname }}"

- name: install Nginx from OS repos
  import_role:
    name: nginxinc.nginx
  vars:
    nginx_manage_repo: false
    nginx_install_from: os_repository
- name: Create Custom Nginx configurations
  import_role:
    name: nginxinc.nginx_config
  vars:
    nginx_config_debug_output: true # temporary
    nginx_config_http_template_enable: true
    nginx_config_http_template:
      - template_file: http/default.conf.j2
        deployment_location: /etc/nginx/sites-available/default
        backup: true
        config:
         servers:
           - core:
               listen:
                 - port: 80
               server_name: _
             log:
               access:
                 - path: /var/log/nginx/default_server.log
             locations:
               - location: /
                 core:
                   index: index.html index.htm index.nginx-debian.html
                   root: /var/www/html
